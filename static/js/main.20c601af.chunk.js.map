{"version":3,"sources":["components/NumberField.js","components/Input.js","utils/getOutputRows.js","utils/lightenColor.js","components/Output.js","components/App.js","index.js"],"names":["NumberField","props","errorMessage","onChange","label","extraCheck","other","useState","text","setText","isError","setIsError","TextField","value","target","isNumber","test","number","parseFloat","isNaN","error","useStyles","makeStyles","theme","root","display","gridTemplateColumns","gridRowGap","spacing","padding","backgroundColor","palette","background","default","marginTop","firstTwoInputs","gridColumn","inputMode","formControlLabelPercent","marginRight","formControlLabelYears","React","memo","setOutputRows","classes","setInputMode","depreciationMode","setDepreciationMode","depreciationPosting","setDepreciationPosting","acquisitionValue","setAcquisitionValue","years","setYears","residualValue","setResidualValue","percent","setPercent","useEffect","calculatedPercent","Math","pow","args","outputRows","Object","values","some","i","currentDepreciationAmount","currentResidualValue","lastResidualValue","get","length","push","year","depreciationAmount","wbValue","getOutputRows","FormControl","className","variant","fullWidth","InputProps","endAdornment","InputAdornment","position","inputYears","inRange","Number","isInteger","RadioGroup","event","FormLabel","focused","FormControlLabel","control","Radio","color","disabled","Typography","lightenColor","hexaColor","num","parseInt","substring","amt","round","r","g","b","toString","slice","breakpoints","up","overflowY","down","Output","TableContainer","component","Paper","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","toFixed","createMuiTheme","primary","main","blue","type","height","minHeight","gridTemplateRows","header","title","margin","App","ThemeProvider","AppBar","Toolbar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20c601af.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction NumberField(props) {\r\n\r\n  const {\r\n    errorMessage,\r\n    onChange,\r\n    label,\r\n    extraCheck = () => true,\r\n    ...other\r\n  } = props;\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const handleChange = ({ target: { value } }) => {\r\n\r\n    const isNumber = /^[+-]?(\\d*\\.)?\\d*$/.test(value);\r\n\r\n    const number = parseFloat(value);\r\n\r\n    if (isNumber && (value === '' || extraCheck(number))) {\r\n\r\n      setIsError(false);\r\n\r\n      onChange(isNaN(number) ? null : number);\r\n\r\n    } else {\r\n\r\n      setIsError(true);\r\n\r\n    }\r\n\r\n    setText(value);\r\n\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      {...other}\r\n      onChange={handleChange}\r\n      value={text}\r\n      error={isError}\r\n      label={isError ? errorMessage : label}\r\n    />\r\n\r\n  )\r\n}\r\n\r\nexport default NumberField; ","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport inRange from 'lodash/inRange';\r\n\r\nimport NumberField from './NumberField';\r\n\r\nimport getOutputRows from '../utils/getOutputRows';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 1fr',\r\n    gridRowGap: theme.spacing(4),\r\n    padding: `${theme.spacing(4)}px max(calc(50% - 190px), ${theme.spacing(4)}px)`,\r\n    backgroundColor: theme.palette.background.default,\r\n    '& .MuiTextField-root': {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  },\r\n  firstTwoInputs: {\r\n    gridColumn: '1 / span 2',\r\n    '& .MuiTextField-root:first-child': {\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  inputMode: {\r\n    gridColumn: '1 / span 2',\r\n  },\r\n  formControlLabelPercent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'auto 1fr',\r\n    marginRight: 0,\r\n  },\r\n  formControlLabelYears: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'auto 1fr',\r\n    marginRight: 0,\r\n  },\r\n}));\r\n\r\nfunction Input(props) {\r\n\r\n  const { setOutputRows } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [inputMode, setInputMode] = useState('residual');\r\n\r\n  const [depreciationMode, setDepreciationMode] = useState('linear');\r\n\r\n  const [depreciationPosting, setDepreciationPosting] = useState('direct');\r\n\r\n  const [acquisitionValue, setAcquisitionValue] = useState(null);\r\n\r\n  const [years, setYears] = useState(null);\r\n\r\n  const [residualValue, setResidualValue] = useState(null);\r\n\r\n  const [percent, setPercent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    \r\n    if (inputMode === 'residual' && residualValue === null) {\r\n      setOutputRows([])\r\n      return;\r\n    };\r\n\r\n    const calculatedPercent =\r\n      inputMode === 'percent'\r\n        ? percent\r\n        : depreciationMode === 'linear'\r\n          ? (acquisitionValue - residualValue) / years / acquisitionValue\r\n          : 1 - Math.pow(residualValue / acquisitionValue, 1 / years);\r\n\r\n    setOutputRows(\r\n      getOutputRows({\r\n        depreciationMode,\r\n        depreciationPosting,\r\n        acquisitionValue,\r\n        years,\r\n        percent: calculatedPercent,\r\n      })\r\n    );\r\n\r\n  });\r\n\r\n\r\n  return (\r\n    <FormControl className={classes.root}>\r\n\r\n      <div className={classes.firstTwoInputs}>\r\n        <NumberField\r\n          className={classes.acquisitionValue}\r\n          errorMessage={\"Bitte eine Zahl grösser als der Restwert eingeben\"}\r\n          onChange={value => setAcquisitionValue(value)}\r\n          extraCheck={value => residualValue === null || value > residualValue}\r\n          label=\"Anschaffungswert\"\r\n          variant=\"filled\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: <InputAdornment position=\"end\">CHF</InputAdornment>,\r\n          }}\r\n        />\r\n        <NumberField\r\n          className={classes.inputYears}\r\n          errorMessage={\"Bitte eine ganze Zahl eingeben im Bereich 1-99\"}\r\n          onChange={value => setYears(value)}\r\n          extraCheck={value => inRange(value, 1, 100) && Number.isInteger(value)}\r\n          label=\"Nutzungsdauer\"\r\n          variant=\"filled\"\r\n          fullWidth\r\n          InputProps={{\r\n            endAdornment: <InputAdornment position=\"end\">Jahre</InputAdornment>,\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <RadioGroup className={classes.inputMode} value={inputMode} onChange={event => setInputMode(event.target.value)}>\r\n        <FormLabel focused={false}>Angabe in</FormLabel>\r\n        <FormControlLabel\r\n          className={classes.formControlLabelYears}\r\n          value=\"residual\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={\r\n            <NumberField\r\n              errorMessage={\"Bitte eine Zahl kleiner als der Anschaffungswert eingeben\"}\r\n              onChange={value => setResidualValue(value)}\r\n              extraCheck={value => acquisitionValue === null || value < acquisitionValue}\r\n              label=\"Restwert\"\r\n              variant=\"filled\"\r\n              fullWidth\r\n              disabled={inputMode === 'percent'}\r\n              InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">CHF</InputAdornment>,\r\n              }}\r\n            />\r\n          }\r\n        />\r\n        <FormControlLabel\r\n          className={classes.formControlLabelPercent}\r\n          value=\"percent\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={\r\n            <NumberField\r\n              errorMessage={\"Bitte eine Zahl eingeben\"}\r\n              onChange={value => setPercent(value / 100)}\r\n              label=\"Abschreibungen in Prozent\"\r\n              variant=\"filled\"\r\n              fullWidth\r\n              disabled={inputMode === 'residual'}\r\n              InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\r\n              }}\r\n            />\r\n          }\r\n        />\r\n      </RadioGroup>\r\n\r\n      <RadioGroup value={depreciationMode} onChange={event => setDepreciationMode(event.target.value)}>\r\n        <FormLabel focused={false}>Abschreibungsart</FormLabel>\r\n        <FormControlLabel\r\n          value=\"linear\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={<Typography color=\"textPrimary\">linear</Typography>}\r\n        />\r\n        <FormControlLabel\r\n          value=\"degressive\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={<Typography color=\"textPrimary\">degressiv</Typography>}\r\n        />\r\n      </RadioGroup>\r\n\r\n      <RadioGroup value={depreciationPosting} onChange={event => setDepreciationPosting(event.target.value)}>\r\n        <FormLabel focused={false}>Buchungsart</FormLabel>\r\n        <FormControlLabel\r\n          value=\"direct\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={<Typography color=\"textPrimary\">direkt</Typography>}\r\n        />\r\n        <FormControlLabel\r\n          value=\"indirect\"\r\n          control={<Radio color=\"primary\" />}\r\n          label={<Typography color=\"textPrimary\">indirekt</Typography>}\r\n        />\r\n      </RadioGroup>\r\n\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default React.memo(Input);\r\n","import get from 'lodash/get';\r\n\r\nexport default function getOutputRows(args) {\r\n\r\n  const {\r\n    depreciationMode,\r\n    depreciationPosting,\r\n    acquisitionValue,\r\n    years,\r\n    percent,\r\n  } = args;\r\n\r\n  const outputRows = [];\r\n  // console.log(Object.values(args).some(value => value === null));\r\n  // console.log(args)\r\n\r\n  if (Object.values(args).some(value => value === null)) return outputRows;\r\n\r\n  for (let i = 1; i <= years; i++) {\r\n\r\n    let currentDepreciationAmount =\r\n      depreciationMode === 'linear'\r\n        ? percent * acquisitionValue\r\n        : percent * acquisitionValue * (1 - percent) ** (i - 1);\r\n\r\n    let currentResidualValue =\r\n      depreciationMode === 'linear'\r\n        ? acquisitionValue - currentDepreciationAmount * i\r\n        : acquisitionValue * (1 - percent) ** i;\r\n\r\n    const lastResidualValue = get(\r\n      outputRows,\r\n      `${outputRows.length - 1}.residualValue`,\r\n      acquisitionValue\r\n    );\r\n    \r\n    if (lastResidualValue === 0) {\r\n      \r\n      break;\r\n      \r\n    } else if (currentResidualValue < 0) {\r\n      \r\n      currentDepreciationAmount = lastResidualValue;\r\n      \r\n      currentResidualValue = 0;\r\n      \r\n    }\r\n\r\n    outputRows.push(\r\n      depreciationPosting === 'direct'\r\n        ? {\r\n          year: i,\r\n          depreciationAmount: currentDepreciationAmount,\r\n          residualValue: currentResidualValue,\r\n        }\r\n        : {\r\n          year: i,\r\n          depreciationAmount: currentDepreciationAmount,\r\n          residualValue: acquisitionValue,\r\n          wbValue: (acquisitionValue - currentResidualValue),\r\n        }\r\n    );\r\n\r\n  }\r\n\r\n  return outputRows;\r\n}","export default function lightenColor(hexaColor, percent) {\r\n\r\n  const num = parseInt(hexaColor.substring(1), 16);\r\n\r\n  const amt = Math.round(2.55 * percent);\r\n\r\n  const r = (num >> 16) + amt;\r\n\r\n  const g = (num & 0x0000FF) + amt;\r\n\r\n  const b = (num >> 8 & 0x00FF) + amt;\r\n\r\n  return '#' + (\r\n    0x1000000\r\n    + (r < 255 ? r < 1 ? 0 : r : 255) * 0x10000\r\n    + (b < 255 ? b < 1 ? 0 : b : 255) * 0x100\r\n    + (g < 255 ? g < 1 ? 0 : g : 255)\r\n  ).toString(16).slice(1);\r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport lightenColor from '../utils/lightenColor';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: lightenColor(theme.palette.background.default, -3),\r\n    [theme.breakpoints.up('md')]: {\r\n      overflowY: 'auto',\r\n    },\r\n    padding: theme.spacing(4),\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Output(props) {\r\n\r\n  const { outputRows } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const precision = 2;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Jahr</TableCell>\r\n              <TableCell align=\"right\">Abschreibungs&shy;betrag</TableCell>\r\n              <TableCell align=\"right\">Restwert Anlagekonto</TableCell>\r\n              {outputRows[0] && outputRows[0].wbValue &&\r\n                <TableCell align=\"right\">Betrag WB-Konto</TableCell>\r\n              }\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {outputRows.map(row => (\r\n              <TableRow key={row.year}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.year}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.depreciationAmount.toFixed(precision)} CHF</TableCell>\r\n                <TableCell align=\"right\">{row.residualValue.toFixed(precision)} CHF</TableCell>\r\n                {row.wbValue &&\r\n                  <TableCell align=\"right\">{row.wbValue.toFixed(precision)} CHF</TableCell>\r\n                }\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Output;\r\n","import React, { useState } from 'react';\nimport { makeStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\n\nimport Input from './Input';\nimport Output from './Output';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[800],\n    },\n    type: 'dark',\n  },\n\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.up('md')]: {\n      height: '100vh',\n    },\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gridTemplateRows: 'auto 1fr',\n    [theme.breakpoints.down('sm')]: {\n      minHeight: '100vh',\n      gridTemplateColumns: '1fr',\n      gridTemplateRows: 'auto auto 1fr',\n    },\n  },\n  header: {\n    position: 'static',\n    gridColumn: '1 / span 2',\n    [theme.breakpoints.down('sm')]: {\n      gridColumn: '1',\n    },\n  },\n  title: {\n    margin: `${theme.spacing(2)}px auto`,\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const [outputRows, setOutputRows] = useState([]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <AppBar className={classes.header}>\n          <Toolbar>\n            <Typography variant=\"h5\" className={classes.title}>\n              Abschreibungsrechner\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Input setOutputRows={setOutputRows} />\n        <Output outputRows={outputRows} />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}